var runonce=0,dbid,officename,item1,userid;window.app={};document.addEventListener("apiReady",checkSession,!0);
function checkSession(){iky();window.df.apis.user.getSession({body:{}},function(a){a.session_id=JSON.parse(sessionStorage.getItem("dfsess"));userid=JSON.parse(sessionStorage.getItem("dfuser"));officename=JSON.parse(sessionStorage.getItem("dfoffice"));null===a.session_id||""==a.session_id?(document.getElementById("login").style.display="",logIn()):(a=new ApiKeyAuthorization("X-Dreamfactory-Session-Token",a.session_id,"header"),window.authorizations.add("X-DreamFactory-Session-Token",a),document.getElementById("login").style.display=
"none",document.getElementById("map").style.display="block",document.getElementById("dbacc").style.display="block",document.getElementById("loginmain").style.display="block",document.getElementById("boldStuff").innerHTML=userid+"_"+officename,alert("Welcome back"),mapme(),runApp())},function(a){document.getElementById("login").style.display="";document.getElementById("boldStuff").innerHTML="Please Login!";logIn()})}function runApp(){}
function getRecords(){window.df.apis.localmongo.getRecords({table_name:"Plots"},function(a){},crudError)}function getErrorString(a){var b="An error occurred, but the server provided no additional information.";a.content&&a.content.data&&a.content.data.error&&(b=a.content.data.error[0].message);return b=b.replace(/&quot;/g,'"').replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&amp;/g,"&").replace(/&apos;/g,"'")}function crudError(a){401==a.status||403==a.status?logIn():alert(getErrorString(a))}
function logIn(){var a=document.getElementById("UserEmail").value,b=document.getElementById("Password").value;a&&b&&window.df.user.login({body:{email:a,password:b}},function(a){var b=new ApiKeyAuthorization("X-Dreamfactory-Session-Token",a.session_id,"header");window.authorizations.add("X-DreamFactory-Session-Token",b);userid=a.email;officename=a.last_name;document.getElementById("login").style.display="none";document.getElementById("map").style.display="block";document.getElementById("dbacc").style.display=
"block";document.getElementById("loginmain").style.display="block";alert("Welcome you are now logged in");mapme();document.getElementById("boldStuff").innerHTML=userid+"_"+officename;runApp()},function(a){alert("Error getting session")})}function dbupdate(){df.apis.localmongo.createRecords({table_name:"Plots",body:item1},function(a){dbid=a.record[0]._id},crudError);window.df.apis.localmongo.updateRecord({table_name:"Plots",id:dbid,body:item1},function(a){console.log(a._id)},crudError)}
function saveme(){var a=drawnItems.toGeoJSON(),b=[];drawnItems.getLayers().forEach(function(a){b.push(a._popup._content)});a.features.forEach(function(a){a.properties.name=b.shift()});item1={record:[{office:officename,data:a}]};df.apis.localmongo.getRecordsByFilter({table_name:"Plots",filter:"office="+officename},function(a){0==a.record.length?df.apis.localmongo.createRecords({table_name:"Plots",body:item1},function(a){alert("Plots saved successfully")},crudError):df.apis.localmongo.deleteRecords({table_name:"Plots",
ids:a.record[0]._id},function(a){},crudError)},crudError)}function onEachFeature(a,b){a.properties&&a.properties.name&&b.bindPopup(a.properties.name)}
function loadme(){var a;window.df.apis.localmongo.getRecordsByFilter({table_name:"Plots",filter:"office="+officename},function(b){0==b.record.length?alert("no Plot Data found"):(map.removeControl(drawControl),map.removeLayer(drawnItems),a=b.record[0].data,drawnItems=L.geoJson(a,{onEachFeature:onEachFeature}).addTo(map),drawControl=new L.Control.Draw({draw:{position:"topleft",polygon:{title:"Draw a polygon!",allowIntersection:!1,drawError:{color:"#b00b00",message:"<strong>Oh snap!<strong> you can't draw that!",
timeout:1E3},shapeOptions:{color:"chocolate"},showArea:!0},polyline:!1,circle:!1,marker:!1,rectangle:!1},edit:{featureGroup:drawnItems}}),map.addControl(drawControl))},crudError)};